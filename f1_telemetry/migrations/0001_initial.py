# Generated by Django 5.0 on 2024-03-06 23:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Header',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionUID', models.BigIntegerField(unique=True)),
                ('sessionTime', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='CarTelemetryData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speed', models.PositiveSmallIntegerField()),
                ('throttle', models.FloatField()),
                ('steer', models.FloatField()),
                ('brake', models.FloatField()),
                ('clutch', models.PositiveSmallIntegerField()),
                ('gear', models.SmallIntegerField()),
                ('engineRPM', models.PositiveSmallIntegerField()),
                ('drs', models.PositiveSmallIntegerField()),
                ('revLightsPercent', models.PositiveSmallIntegerField()),
                ('revLightsBitValue', models.PositiveSmallIntegerField()),
                ('brakesTemperatureRR', models.PositiveSmallIntegerField()),
                ('brakesTemperatureRL', models.PositiveSmallIntegerField()),
                ('brakesTemperatureFL', models.PositiveSmallIntegerField()),
                ('brakesTemperatureFR', models.PositiveSmallIntegerField()),
                ('tyresSurfaceTemperatureRR', models.PositiveSmallIntegerField()),
                ('tyresSurfaceTemperatureRL', models.PositiveSmallIntegerField()),
                ('tyresSurfaceTemperatureFL', models.PositiveSmallIntegerField()),
                ('tyresSurfaceTemperatureFR', models.PositiveSmallIntegerField()),
                ('tyresInnerTemperatureRR', models.PositiveSmallIntegerField()),
                ('tyresInnerTemperatureRL', models.PositiveSmallIntegerField()),
                ('tyresInnerTemperatureFL', models.PositiveSmallIntegerField()),
                ('tyresInnerTemperatureFR', models.PositiveSmallIntegerField()),
                ('engineTemperature', models.PositiveSmallIntegerField()),
                ('tyresPressureRR', models.FloatField()),
                ('tyresPressureRL', models.FloatField()),
                ('tyresPressureFL', models.FloatField()),
                ('tyresPressureFR', models.FloatField()),
                ('surfaceTypeRR', models.PositiveSmallIntegerField()),
                ('surfaceTypeRL', models.PositiveSmallIntegerField()),
                ('surfaceTypeFL', models.PositiveSmallIntegerField()),
                ('surfaceTypeFR', models.PositiveSmallIntegerField()),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='f1_telemetry.header')),
            ],
        ),
        migrations.CreateModel(
            name='CarSetupData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frontWing', models.PositiveSmallIntegerField()),
                ('rearWing', models.PositiveSmallIntegerField()),
                ('onThrottle', models.PositiveSmallIntegerField()),
                ('offThrottle', models.PositiveSmallIntegerField()),
                ('frontCamber', models.FloatField()),
                ('rearCamber', models.FloatField()),
                ('frontToe', models.FloatField()),
                ('rearToe', models.FloatField()),
                ('frontSuspension', models.PositiveSmallIntegerField()),
                ('rearSuspension', models.PositiveSmallIntegerField()),
                ('frontAntiRollBar', models.PositiveSmallIntegerField()),
                ('rearAntiRollBar', models.PositiveSmallIntegerField()),
                ('frontSuspensionHeight', models.PositiveSmallIntegerField()),
                ('rearSuspensionHeight', models.PositiveSmallIntegerField()),
                ('brakePressure', models.PositiveSmallIntegerField()),
                ('brakeBias', models.PositiveSmallIntegerField()),
                ('rearLeftTyrePressure', models.FloatField()),
                ('rearRightTyrePressure', models.FloatField()),
                ('frontLeftTyrePressure', models.FloatField()),
                ('frontRightTyrePressure', models.FloatField()),
                ('ballast', models.PositiveSmallIntegerField()),
                ('fuelLoad', models.FloatField()),
                ('header', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='f1_telemetry.header')),
            ],
        ),
        migrations.CreateModel(
            name='CarMotionData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gForceLateral', models.FloatField()),
                ('gForceLongitudinal', models.FloatField()),
                ('gForceVertical', models.FloatField()),
                ('yaw', models.FloatField()),
                ('pitch', models.FloatField()),
                ('roll', models.FloatField()),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='f1_telemetry.header')),
            ],
        ),
        migrations.CreateModel(
            name='LapData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastLapTimeInMS', models.PositiveIntegerField()),
                ('currentLapTimeInMS', models.PositiveIntegerField()),
                ('sector1TimeInMS', models.PositiveSmallIntegerField()),
                ('sector2TimeInMS', models.PositiveSmallIntegerField()),
                ('lapDistance', models.FloatField()),
                ('totalDistance', models.FloatField()),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='f1_telemetry.header')),
            ],
        ),
    ]
