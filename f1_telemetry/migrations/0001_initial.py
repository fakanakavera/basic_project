# Generated by Django 5.0 on 2024-04-05 13:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Header',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('packetFormat', models.PositiveSmallIntegerField(default=0)),
                ('gameMajorVersion', models.PositiveSmallIntegerField(default=0)),
                ('gameMinorVersion', models.PositiveSmallIntegerField(default=0)),
                ('packetVersion', models.PositiveSmallIntegerField(default=0)),
                ('packetId', models.PositiveSmallIntegerField(default=0)),
                ('sessionUID', models.DecimalField(decimal_places=0, max_digits=22)),
                ('sessionTime', models.FloatField(default=0.0)),
                ('frameIdentifier', models.PositiveIntegerField(default=0)),
                ('playerCarIndex', models.PositiveSmallIntegerField(default=0)),
                ('secondaryPlayerCarIndex', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event_type', models.CharField(max_length=100)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CarSetup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frontWing', models.PositiveSmallIntegerField(default=0)),
                ('rearWing', models.PositiveSmallIntegerField(default=0)),
                ('onThrottle', models.PositiveSmallIntegerField(default=0)),
                ('offThrottle', models.PositiveSmallIntegerField(default=0)),
                ('frontCamber', models.FloatField(default=0.0)),
                ('rearCamber', models.FloatField(default=0.0)),
                ('frontToe', models.FloatField(default=0.0)),
                ('rearToe', models.FloatField(default=0.0)),
                ('frontSuspension', models.PositiveSmallIntegerField(default=0)),
                ('rearSuspension', models.PositiveSmallIntegerField(default=0)),
                ('frontAntiRollBar', models.PositiveSmallIntegerField(default=0)),
                ('rearAntiRollBar', models.PositiveSmallIntegerField(default=0)),
                ('frontSuspensionHeight', models.PositiveSmallIntegerField(default=0)),
                ('rearSuspensionHeight', models.PositiveSmallIntegerField(default=0)),
                ('brakePressure', models.PositiveSmallIntegerField(default=0)),
                ('brakeBias', models.PositiveSmallIntegerField(default=0)),
                ('rearLeftTyrePressure', models.FloatField(default=0.0)),
                ('rearRightTyrePressure', models.FloatField(default=0.0)),
                ('frontLeftTyrePressure', models.FloatField(default=0.0)),
                ('frontRightTyrePressure', models.FloatField(default=0.0)),
                ('ballast', models.PositiveSmallIntegerField(default=0)),
                ('fuelLoad', models.FloatField(default=0.0)),
                ('header', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='f1_telemetry.header')),
            ],
        ),
        migrations.CreateModel(
            name='CarMotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('worldPositionX', models.FloatField(default=0.0)),
                ('worldPositionY', models.FloatField(default=0.0)),
                ('worldPositionZ', models.FloatField(default=0.0)),
                ('worldVelocityX', models.FloatField(default=0.0)),
                ('worldVelocityY', models.FloatField(default=0.0)),
                ('worldVelocityZ', models.FloatField(default=0.0)),
                ('worldForwardDirX', models.PositiveSmallIntegerField(default=0, null=True)),
                ('worldForwardDirY', models.PositiveSmallIntegerField(default=0, null=True)),
                ('worldForwardDirZ', models.PositiveSmallIntegerField(default=0, null=True)),
                ('worldRightDirX', models.PositiveSmallIntegerField(default=0, null=True)),
                ('worldRightDirY', models.PositiveSmallIntegerField(default=0, null=True)),
                ('worldRightDirZ', models.PositiveSmallIntegerField(default=0, null=True)),
                ('gForceLateral', models.FloatField(default=0.0)),
                ('gForceLongitudinal', models.FloatField(default=0.0)),
                ('gForceVertical', models.FloatField(default=0.0)),
                ('yaw', models.FloatField(default=0.0)),
                ('pitch', models.FloatField(default=0.0)),
                ('roll', models.FloatField(default=0.0)),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='f1_telemetry.header')),
            ],
        ),
        migrations.CreateModel(
            name='Lap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastLapTimeInMS', models.PositiveIntegerField(default=0)),
                ('currentLapTimeInMS', models.PositiveIntegerField(default=0)),
                ('sector1TimeInMS', models.PositiveIntegerField(default=0)),
                ('sector2TimeInMS', models.PositiveIntegerField(default=0)),
                ('lapDistance', models.FloatField(default=0.0)),
                ('totalDistance', models.FloatField(default=0.0)),
                ('safetyCarDelta', models.FloatField(default=0.0)),
                ('carPosition', models.PositiveSmallIntegerField(default=0)),
                ('currentLapNum', models.PositiveSmallIntegerField(default=0)),
                ('pitStatus', models.PositiveSmallIntegerField(default=0)),
                ('numPitStops', models.PositiveSmallIntegerField(default=0)),
                ('sector', models.PositiveSmallIntegerField(default=0)),
                ('currentLapInvalid', models.PositiveSmallIntegerField(default=0)),
                ('penalties', models.PositiveSmallIntegerField(default=0)),
                ('warnings', models.PositiveSmallIntegerField(default=0)),
                ('numUnservedDriveThroughPens', models.PositiveSmallIntegerField(default=0)),
                ('numUnservedStopGoPens', models.PositiveSmallIntegerField(default=0)),
                ('gridPosition', models.PositiveSmallIntegerField(default=0)),
                ('driverStatus', models.PositiveSmallIntegerField(default=0)),
                ('resultStatus', models.PositiveSmallIntegerField(default=0)),
                ('pitLaneTimerActive', models.PositiveSmallIntegerField(default=0)),
                ('pitLaneTimeInLaneInMS', models.PositiveIntegerField(default=0)),
                ('pitStopTimerInMS', models.PositiveIntegerField(default=0)),
                ('pitStopShouldServePen', models.PositiveSmallIntegerField(default=0)),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='f1_telemetry.header')),
            ],
        ),
        migrations.CreateModel(
            name='PacketSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weather', models.IntegerField(default=0)),
                ('trackTemperature', models.IntegerField(default=0)),
                ('airTemperature', models.IntegerField(default=0)),
                ('totalLaps', models.IntegerField(default=0)),
                ('trackLength', models.IntegerField(default=0)),
                ('sessionType', models.IntegerField(default=0)),
                ('trackId', models.IntegerField(default=0)),
                ('formula', models.IntegerField(default=0)),
                ('sessionTimeLeft', models.IntegerField(default=0)),
                ('sessionDuration', models.IntegerField(default=0)),
                ('pitSpeedLimit', models.IntegerField(default=0)),
                ('gamePaused', models.IntegerField(default=0)),
                ('isSpectating', models.IntegerField(default=0)),
                ('spectatorCarIndex', models.IntegerField(default=0)),
                ('sliProNativeSupport', models.IntegerField(default=0)),
                ('numMarshalZones', models.IntegerField(default=0)),
                ('zoneStart', models.FloatField(default=0.0)),
                ('zoneFlag', models.IntegerField(default=0)),
                ('safetyCarStatus', models.IntegerField(default=0)),
                ('networkGame', models.IntegerField(default=0)),
                ('numWeatherForecastSamples', models.IntegerField(default=0)),
                ('timeOffset', models.IntegerField(default=0)),
                ('trackTemperatureChange', models.IntegerField(default=0)),
                ('airTemperatureChange', models.IntegerField(default=0)),
                ('rainPercentage', models.IntegerField(default=0)),
                ('forecastAccuracy', models.IntegerField(default=0)),
                ('aiDifficulty', models.IntegerField(default=0)),
                ('seasonLinkIdentifier', models.PositiveIntegerField(default=0)),
                ('weekendLinkIdentifier', models.PositiveIntegerField(default=0)),
                ('sessionLinkIdentifier', models.PositiveIntegerField(default=0)),
                ('pitStopWindowIdealLap', models.IntegerField(default=0)),
                ('pitStopWindowLatestLap', models.IntegerField(default=0)),
                ('pitStopRejoinPosition', models.IntegerField(default=0)),
                ('steeringAssist', models.IntegerField(default=0)),
                ('brakingAssist', models.IntegerField(default=0)),
                ('gearboxAssist', models.IntegerField(default=0)),
                ('pitAssist', models.IntegerField(default=0)),
                ('pitReleaseAssist', models.IntegerField(default=0)),
                ('ERSAssist', models.IntegerField(default=0)),
                ('DRSAssist', models.IntegerField(default=0)),
                ('dynamicRacingLine', models.IntegerField(default=0)),
                ('dynamicRacingLineType', models.IntegerField(default=0)),
                ('gameMode', models.IntegerField(default=0)),
                ('ruleSet', models.IntegerField(default=0)),
                ('timeOfDay', models.PositiveIntegerField(default=0)),
                ('sessionLength', models.IntegerField(default=0)),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='f1_telemetry.header')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numActiveCars', models.PositiveSmallIntegerField(default=0)),
                ('aiControlled', models.BooleanField()),
                ('driverId', models.PositiveSmallIntegerField(default=9999)),
                ('networkId', models.PositiveSmallIntegerField(default=0)),
                ('teamId', models.PositiveSmallIntegerField(default=0)),
                ('myTeam', models.BooleanField()),
                ('raceNumber', models.PositiveSmallIntegerField(default=0)),
                ('nationality', models.PositiveSmallIntegerField(default=0)),
                ('name', models.CharField(max_length=100)),
                ('yourTelemetry', models.BooleanField()),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='f1_telemetry.header')),
            ],
        ),
        migrations.CreateModel(
            name='CarTelemetry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speed', models.PositiveSmallIntegerField(default=0)),
                ('throttle', models.FloatField(default=0.0)),
                ('steer', models.FloatField(default=0.0)),
                ('brake', models.FloatField(default=0.0)),
                ('clutch', models.PositiveSmallIntegerField(default=0)),
                ('gear', models.SmallIntegerField(default=0)),
                ('engineRPM', models.PositiveSmallIntegerField(default=0)),
                ('drs', models.PositiveSmallIntegerField(default=0)),
                ('revLightsPercent', models.PositiveSmallIntegerField(default=0)),
                ('revLightsBitValue', models.PositiveSmallIntegerField(default=0)),
                ('brakesTemperatureRR', models.PositiveSmallIntegerField(default=0)),
                ('brakesTemperatureRL', models.PositiveSmallIntegerField(default=0)),
                ('brakesTemperatureFL', models.PositiveSmallIntegerField(default=0)),
                ('brakesTemperatureFR', models.PositiveSmallIntegerField(default=0)),
                ('tyresSurfaceTemperatureRR', models.PositiveSmallIntegerField(default=0)),
                ('tyresSurfaceTemperatureRL', models.PositiveSmallIntegerField(default=0)),
                ('tyresSurfaceTemperatureFL', models.PositiveSmallIntegerField(default=0)),
                ('tyresSurfaceTemperatureFR', models.PositiveSmallIntegerField(default=0)),
                ('tyresInnerTemperatureRR', models.PositiveSmallIntegerField(default=0)),
                ('tyresInnerTemperatureRL', models.PositiveSmallIntegerField(default=0)),
                ('tyresInnerTemperatureFL', models.PositiveSmallIntegerField(default=0)),
                ('tyresInnerTemperatureFR', models.PositiveSmallIntegerField(default=0)),
                ('engineTemperature', models.PositiveSmallIntegerField(default=0)),
                ('tyresPressureRR', models.FloatField(default=0.0)),
                ('tyresPressureRL', models.FloatField(default=0.0)),
                ('tyresPressureFL', models.FloatField(default=0.0)),
                ('tyresPressureFR', models.FloatField(default=0.0)),
                ('surfaceTypeRR', models.PositiveSmallIntegerField(default=0)),
                ('surfaceTypeRL', models.PositiveSmallIntegerField(default=0)),
                ('surfaceTypeFL', models.PositiveSmallIntegerField(default=0)),
                ('surfaceTypeFR', models.PositiveSmallIntegerField(default=0)),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='f1_telemetry.header')),
                ('driverId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='f1_telemetry.participant')),
            ],
        ),
    ]
